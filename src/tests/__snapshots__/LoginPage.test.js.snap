// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LoginPage will match snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div
          style="direction: ltr;"
        >
          <div
            class=""
            style="width: 0%; transition: width 800ms linear 0s; will-change: width, opacity; height: 3px; background-color: red; position: absolute; opacity: 0;"
          />
          <div
            style="display: table; clear: both;"
          />
        </div>
        <form
          data-testid="loginForm"
        >
          <h3
            class="center"
          >
            Employee Polls
          </h3>
          <img
            alt="User Avatar"
            class="user-group"
            src="user-group.png"
          />
          <h3
            class="center"
          >
            Log In
          </h3>
          <div
            class="mb-10"
          >
            <label>
              <div
                class="center mb-10"
              >
                User
              </div>
              <select
                class="form-control"
                data-testid="userSelect"
              >
                <option
                  class="d-none"
                  disabled=""
                  selected=""
                  value=""
                >
                  User
                </option>
                <option
                  value="sarahedo"
                >
                  sarahedo
                </option>
                <option
                  value="tylermcginnis"
                >
                  tylermcginnis
                </option>
              </select>
            </label>
          </div>
          <div
            class="mb-10"
          >
            <label>
              <div
                class="center mb-10"
              >
                Password
              </div>
              <input
                class="form-control"
                name="Password"
                placeholder="Password"
                type="password"
                value=""
              />
            </label>
          </div>
          <div
            class="text-danger"
            data-testid="wrongPassword"
          />
          <div
            class="center"
          >
            <button
              class="btn"
              type="submit"
            >
              Submit
            </button>
          </div>
        </form>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div
        style="direction: ltr;"
      >
        <div
          class=""
          style="width: 0%; transition: width 800ms linear 0s; will-change: width, opacity; height: 3px; background-color: red; position: absolute; opacity: 0;"
        />
        <div
          style="display: table; clear: both;"
        />
      </div>
      <form
        data-testid="loginForm"
      >
        <h3
          class="center"
        >
          Employee Polls
        </h3>
        <img
          alt="User Avatar"
          class="user-group"
          src="user-group.png"
        />
        <h3
          class="center"
        >
          Log In
        </h3>
        <div
          class="mb-10"
        >
          <label>
            <div
              class="center mb-10"
            >
              User
            </div>
            <select
              class="form-control"
              data-testid="userSelect"
            >
              <option
                class="d-none"
                disabled=""
                selected=""
                value=""
              >
                User
              </option>
              <option
                value="sarahedo"
              >
                sarahedo
              </option>
              <option
                value="tylermcginnis"
              >
                tylermcginnis
              </option>
            </select>
          </label>
        </div>
        <div
          class="mb-10"
        >
          <label>
            <div
              class="center mb-10"
            >
              Password
            </div>
            <input
              class="form-control"
              name="Password"
              placeholder="Password"
              type="password"
              value=""
            />
          </label>
        </div>
        <div
          class="text-danger"
          data-testid="wrongPassword"
        />
        <div
          class="center"
        >
          <button
            class="btn"
            type="submit"
          >
            Submit
          </button>
        </div>
      </form>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": Object {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;
